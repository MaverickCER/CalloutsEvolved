[{"C:\\Dev\\calloutsevolved\\pages\\404.js":"1","C:\\Dev\\calloutsevolved\\pages\\blogs.js":"2","C:\\Dev\\calloutsevolved\\pages\\index.js":"3","C:\\Dev\\calloutsevolved\\pages\\lfg.js":"4","C:\\Dev\\calloutsevolved\\pages\\register.js":"5","C:\\Dev\\calloutsevolved\\pages\\session\\index.js":"6","C:\\Dev\\calloutsevolved\\pages\\session\\[id].js":"7","C:\\Dev\\calloutsevolved\\pages\\updateProfile.js":"8","C:\\Dev\\calloutsevolved\\pages\\_app.js":"9","C:\\Dev\\calloutsevolved\\pages\\_document.js":"10","C:\\Dev\\calloutsevolved\\components\\template\\index.jsx":"11","C:\\Dev\\calloutsevolved\\pages\\api\\hello.js":"12","C:\\Dev\\calloutsevolved\\pages\\sessions.js":"13","C:\\Dev\\calloutsevolved\\pages\\sitemap.xml.js":"14","C:\\Dev\\calloutsevolved\\lib\\markdownToHtml.js":"15","C:\\Dev\\calloutsevolved\\pages\\blog\\index.js":"16","C:\\Dev\\calloutsevolved\\pages\\blog\\[slug].js":"17","C:\\Dev\\calloutsevolved\\lib\\getPosts.js":"18","C:\\Dev\\calloutsevolved\\pages\\forgot-password.js":"19","C:\\Dev\\calloutsevolved\\pages\\session\\join\\index.js":"20","C:\\Dev\\calloutsevolved\\pages\\session\\join\\[id].js":"21","C:\\Dev\\calloutsevolved\\components\\auth\\resetpassword.jsx":"22","C:\\Dev\\calloutsevolved\\components\\auth\\signin.jsx":"23","C:\\Dev\\calloutsevolved\\components\\auth\\signup.jsx":"24","C:\\Dev\\calloutsevolved\\components\\auth\\updatedisplayname.jsx":"25","C:\\Dev\\calloutsevolved\\components\\auth\\updateemail.jsx":"26","C:\\Dev\\calloutsevolved\\components\\auth\\updatepassword.jsx":"27","C:\\Dev\\calloutsevolved\\components\\ui\\input.jsx":"28","C:\\Dev\\calloutsevolved\\pages\\signin.js":"29","C:\\Dev\\calloutsevolved\\components\\alert.jsx":"30","C:\\Dev\\calloutsevolved\\components\\auth\\authcheckbox.jsx":"31","C:\\Dev\\calloutsevolved\\components\\auth\\authinput.jsx":"32","C:\\Dev\\calloutsevolved\\components\\auth\\authsubmit.jsx":"33","C:\\Dev\\calloutsevolved\\components\\avatar.jsx":"34","C:\\Dev\\calloutsevolved\\components\\container.jsx":"35","C:\\Dev\\calloutsevolved\\components\\cover-image.jsx":"36","C:\\Dev\\calloutsevolved\\components\\date-formatter.jsx":"37","C:\\Dev\\calloutsevolved\\components\\DisplayData.jsx":"38","C:\\Dev\\calloutsevolved\\components\\ExampleEventTag.jsx":"39","C:\\Dev\\calloutsevolved\\components\\header.jsx":"40","C:\\Dev\\calloutsevolved\\components\\hero-post.jsx":"41","C:\\Dev\\calloutsevolved\\components\\intro.jsx":"42","C:\\Dev\\calloutsevolved\\components\\Layout.jsx":"43","C:\\Dev\\calloutsevolved\\components\\ManageSub.jsx":"44","C:\\Dev\\calloutsevolved\\components\\meta.jsx":"45","C:\\Dev\\calloutsevolved\\components\\more-stories.jsx":"46","C:\\Dev\\calloutsevolved\\components\\post-body.jsx":"47","C:\\Dev\\calloutsevolved\\components\\post-footer.jsx":"48","C:\\Dev\\calloutsevolved\\components\\post-header.jsx":"49","C:\\Dev\\calloutsevolved\\components\\post-layout.jsx":"50","C:\\Dev\\calloutsevolved\\components\\post-preview.jsx":"51","C:\\Dev\\calloutsevolved\\components\\post-title.jsx":"52","C:\\Dev\\calloutsevolved\\components\\ui\\checkbox.jsx":"53","C:\\Dev\\calloutsevolved\\components\\ui\\Navbar.jsx":"54","C:\\Dev\\calloutsevolved\\components\\ui\\radio.jsx":"55","C:\\Dev\\calloutsevolved\\pages\\group\\index.js":"56","C:\\Dev\\calloutsevolved\\pages\\group\\join\\index.js":"57","C:\\Dev\\calloutsevolved\\pages\\group\\join\\[id].js":"58","C:\\Dev\\calloutsevolved\\pages\\group\\[id].js":"59","C:\\Dev\\calloutsevolved\\pages\\groups.js":"60","C:\\Dev\\calloutsevolved\\components\\ui\\select.jsx":"61"},{"size":101,"mtime":1648568706014,"results":"62","hashOfConfig":"63"},{"size":1243,"mtime":1648685207304,"results":"64","hashOfConfig":"63"},{"size":1938,"mtime":1653861962398,"results":"65","hashOfConfig":"63"},{"size":52072,"mtime":1654660670525,"results":"66","hashOfConfig":"63"},{"size":987,"mtime":1653744585602,"results":"67","hashOfConfig":"63"},{"size":253,"mtime":1653972573133,"results":"68","hashOfConfig":"63"},{"size":8640,"mtime":1653808529894,"results":"69","hashOfConfig":"63"},{"size":5690,"mtime":1653744999825,"results":"70","hashOfConfig":"63"},{"size":1176,"mtime":1653806187506,"results":"71","hashOfConfig":"63"},{"size":1520,"mtime":1648648602022,"results":"72","hashOfConfig":"63"},{"size":1704,"mtime":1649762098525,"results":"73","hashOfConfig":"63"},{"size":176,"mtime":1648659260509,"results":"74","hashOfConfig":"63"},{"size":1766,"mtime":1653808347433,"results":"75","hashOfConfig":"63"},{"size":1491,"mtime":1648685207307,"results":"76","hashOfConfig":"63"},{"size":221,"mtime":1653743852855,"results":"77","hashOfConfig":"63"},{"size":250,"mtime":1653744479781,"results":"78","hashOfConfig":"63"},{"size":2133,"mtime":1648685207317,"results":"79","hashOfConfig":"63"},{"size":1147,"mtime":1648667929534,"results":"80","hashOfConfig":"63"},{"size":1218,"mtime":1653744501792,"results":"81","hashOfConfig":"63"},{"size":248,"mtime":1653744608846,"results":"82","hashOfConfig":"63"},{"size":3065,"mtime":1654818404086,"results":"83","hashOfConfig":"63"},{"size":2829,"mtime":1649887285242,"results":"84","hashOfConfig":"63"},{"size":3923,"mtime":1654429259118,"results":"85","hashOfConfig":"63"},{"size":5502,"mtime":1653965143067,"results":"86","hashOfConfig":"63"},{"size":2733,"mtime":1649887258823,"results":"87","hashOfConfig":"63"},{"size":4154,"mtime":1649887241335,"results":"88","hashOfConfig":"63"},{"size":4210,"mtime":1649887231857,"results":"89","hashOfConfig":"63"},{"size":2611,"mtime":1654818396191,"results":"90","hashOfConfig":"63"},{"size":1181,"mtime":1653745355131,"results":"91","hashOfConfig":"63"},{"size":983,"mtime":1648665031288,"results":"92","hashOfConfig":"63"},{"size":363,"mtime":1649765534090,"results":"93","hashOfConfig":"63"},{"size":2654,"mtime":1654434222694,"results":"94","hashOfConfig":"63"},{"size":1912,"mtime":1653757362245,"results":"95","hashOfConfig":"63"},{"size":372,"mtime":1648664399082,"results":"96","hashOfConfig":"63"},{"size":122,"mtime":1648664738423,"results":"97","hashOfConfig":"63"},{"size":600,"mtime":1648668175087,"results":"98","hashOfConfig":"63"},{"size":278,"mtime":1653743458318,"results":"99","hashOfConfig":"63"},{"size":1358,"mtime":1650265553223,"results":"100","hashOfConfig":"63"},{"size":572,"mtime":1648576712033,"results":"101","hashOfConfig":"63"},{"size":310,"mtime":1650150433943,"results":"102","hashOfConfig":"63"},{"size":1064,"mtime":1649762098442,"results":"103","hashOfConfig":"63"},{"size":634,"mtime":1648664232475,"results":"104","hashOfConfig":"63"},{"size":367,"mtime":1653806171611,"results":"105","hashOfConfig":"63"},{"size":5648,"mtime":1654570995964,"results":"106","hashOfConfig":"63"},{"size":1035,"mtime":1648667059098,"results":"107","hashOfConfig":"63"},{"size":584,"mtime":1649762098442,"results":"108","hashOfConfig":"63"},{"size":293,"mtime":1648664852587,"results":"109","hashOfConfig":"63"},{"size":1085,"mtime":1648664513838,"results":"110","hashOfConfig":"63"},{"size":876,"mtime":1649762098442,"results":"111","hashOfConfig":"63"},{"size":348,"mtime":1649762076122,"results":"112","hashOfConfig":"63"},{"size":840,"mtime":1649764161325,"results":"113","hashOfConfig":"63"},{"size":244,"mtime":1648664232475,"results":"114","hashOfConfig":"63"},{"size":1370,"mtime":1654818393561,"results":"115","hashOfConfig":"63"},{"size":4859,"mtime":1654397952417,"results":"116","hashOfConfig":"63"},{"size":436,"mtime":1649764225209,"results":"117","hashOfConfig":"63"},{"size":251,"mtime":1653972480220,"results":"118","hashOfConfig":"63"},{"size":251,"mtime":1653972558852,"results":"119","hashOfConfig":"63"},{"size":3061,"mtime":1654818342540,"results":"120","hashOfConfig":"63"},{"size":8636,"mtime":1654818405654,"results":"121","hashOfConfig":"63"},{"size":6241,"mtime":1654429350339,"results":"122","hashOfConfig":"63"},{"size":1154,"mtime":1654435494116,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19p6hdk",{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\calloutsevolved\\pages\\404.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\blogs.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\index.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\lfg.js",["310","311","312","313"],[],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  child,\r\n  get,\r\n  onValue,\r\n  orderByChild,\r\n  query,\r\n  ref,\r\n  serverTimestamp,\r\n  startAt,\r\n  update,\r\n} from 'firebase/database';\r\nimport { useForm, useWatch } from 'react-hook-form';\r\n\r\nimport Checkbox from '../components/ui/checkbox';\r\nimport CrossPlatformIcon from '../assets/CrossPlatformIcon';\r\nimport Head from 'next/head';\r\nimport Input from '../components/ui/input';\r\nimport Link from 'next/link';\r\nimport NintendoIcon from '../assets/NintendoIcon';\r\nimport OtherPlatformIcon from '../assets/OtherPlatformIcon';\r\nimport PlayStationIcon from '../assets/PlayStationIcon';\r\nimport Select from '../components/ui/select';\r\nimport SteamIcon from '../assets/SteamIcon';\r\nimport XboxIcon from '../assets/XboxIcon';\r\nimport { async } from '@firebase/util';\r\nimport { database } from '../firebase/firebaseClient';\r\nimport styles from '../styles/groups.module.css';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useRouter } from 'next/router';\r\nimport { useSettings } from '../context/SettingsContext';\r\n\r\nconst preload = {\r\n  0: {\r\n    activity: 'Vow of the Disciple',\r\n    description: '3 man flawless',\r\n    game: 'Destiny 2',\r\n    isPublic: true,\r\n    lang: 'en',\r\n    platform: 'All platforms',\r\n    usersCount: 1,\r\n    usersMax: 6,\r\n  },\r\n  1: {\r\n    activity: 'Last Wish',\r\n    description: 'Fresh kwtd',\r\n    game: 'Destiny 2',\r\n    isPublic: true,\r\n    lang: 'en',\r\n    platform: 'All platforms',\r\n    usersCount: 1,\r\n    usersMax: 6,\r\n  },\r\n  2: {\r\n    activity: 'Garden of Salvation',\r\n    description: 'Divinity run',\r\n    game: 'Destiny 2',\r\n    isPublic: true,\r\n    lang: 'en',\r\n    platform: 'xbox',\r\n    usersCount: 1,\r\n    usersMax: 6,\r\n  },\r\n  2: {\r\n    activity: 'Deep Stone Crypt',\r\n    description: 'All Challenges',\r\n    game: 'Destiny 2',\r\n    isPublic: true,\r\n    lang: 'en',\r\n    platform: 'xbox',\r\n    usersCount: 1,\r\n    usersMax: 6,\r\n  },\r\n};\r\n\r\nconst allLanguagesArr = [\r\n  'Afrikaans',\r\n  'Albanian',\r\n  'Amharic',\r\n  'Arabic',\r\n  'Armenian',\r\n  'Azerbaijani',\r\n  'Basque',\r\n  'Bengali',\r\n  'Bosnian',\r\n  'Bulgarian',\r\n  'Burmese',\r\n  'Catalan',\r\n  'Chinese, Mandarin',\r\n  'Croatian',\r\n  'Czech',\r\n  'Danish',\r\n  'Dutch',\r\n  'English',\r\n  'Estonian',\r\n  'Filipino',\r\n  'Finnish',\r\n  'French',\r\n  'Galician',\r\n  'Georgian',\r\n  'German',\r\n  'Greek',\r\n  'Gujarati',\r\n  'Hebrew',\r\n  'Hindi',\r\n  'Hungarian',\r\n  'Icelandic',\r\n  'Indonesian',\r\n  'Italian',\r\n  'Japanese',\r\n  'Javanese',\r\n  'Kannada',\r\n  'Khmer',\r\n  'Korean',\r\n  'Lao',\r\n  'Latvian',\r\n  'Lithuanian',\r\n  'Macedonian',\r\n  'Malay',\r\n  'Malayalam',\r\n  'Marathi',\r\n  'Mongolian',\r\n  'Nepali',\r\n  'Norwegian Bokmål',\r\n  'Persian',\r\n  'Polish',\r\n  'Portuguese',\r\n  'Romanian',\r\n  'Russian',\r\n  'Serbian',\r\n  'Sinhala',\r\n  'Slovak',\r\n  'Slovenian',\r\n  'Spanish',\r\n  'Sundanese',\r\n  'Swahili',\r\n  'Swedish',\r\n  'Tamil',\r\n  'Telugu',\r\n  'Thai',\r\n  'Turkish',\r\n  'Ukrainian',\r\n  'Urdu',\r\n  'Uzbek',\r\n  'Vietnamese',\r\n  'Zulu',\r\n];\r\n\r\nconst Lfg = (props) => {\r\n  const [activitys, setActivitys] = useState([]);\r\n  const [dataObj, setDataObj] = useState({});\r\n  const [error, setError] = useState('');\r\n  const [games, setGames] = useState([]);\r\n  const [allActivities, setAllActivities] = useState([]);\r\n  const [allGames, setAllGames] = useState({});\r\n  const [sessions, setSessions] = useState(props?.data);\r\n  const [platforms, setPlatforms] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [limitNum, setLimitNum] = useState(60);\r\n  const [languages, setLanguages] = useState([]);\r\n  const router = useRouter();\r\n  const { currentUser } = useAuth();\r\n  const { userIsPremium } = useSettings();\r\n  const {\r\n    register,\r\n    control,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    activity: 'all',\r\n    createActivity: '',\r\n    createGame: '',\r\n    createLang: '',\r\n    createOpen: false,\r\n    createPublic: true,\r\n    createPlatform: 'all',\r\n    createUsers: null,\r\n    createPhoto: null,\r\n    game: 'all',\r\n    platform: 'all',\r\n    language: 'all',\r\n    search: '',\r\n    mode: 'onBlur',\r\n  });\r\n  const activity = useWatch({ control, name: 'activity', defaultValue: 'all' });\r\n  const game = useWatch({ control, name: 'game', defaultValue: 'all' });\r\n  const platform = useWatch({ control, name: 'platform', defaultValue: 'all' });\r\n  const language = useWatch({ control, name: 'language', defaultValue: 'all' });\r\n  const search = useWatch({ control, name: 'search', defaultValue: '' });\r\n  const createActivity = useWatch({ control, name: 'createActivity', defaultValue: '' });\r\n  const createNewActivity = useWatch({ control, name: 'createNewActivity', defaultValue: '' });\r\n  const createDescription = useWatch({ control, name: 'createDescription', defaultValue: '' });\r\n  const createGame = useWatch({ control, name: 'createGame', defaultValue: '' });\r\n  const createNewGame = useWatch({ control, name: 'createNewGame', defaultValue: '' });\r\n  const createOpen = useWatch({ control, name: 'createOpen', defaultValue: true });\r\n  const createPublic = useWatch({ control, name: 'createPublic', defaultValue: true });\r\n  const createPlatform = useWatch({ control, name: 'createPlatform', defaultValue: 'all' });\r\n  const createPhoto = useWatch({ control, name: 'createPhoto' });\r\n  const createLang = useWatch({ control, name: 'createLang', defaultValue: 'English' });\r\n  const createUsers = useWatch({ control, name: 'createUsers', defaultValue: 2 });\r\n\r\n  const onSubmit = async () => {\r\n    let photoURL = false,\r\n      blacklist = {};\r\n\r\n    if (createGame === 'newGame') {\r\n      if (createNewGame === '') return setError('New Game is required');\r\n      if (createNewActivity === '') return setError('New Activity is required');\r\n      if (createPhoto === '') return setError('Game Art is required');\r\n    } else if (createGame === '') return setError('Game is required');\r\n    if (createGame !== 'newGame') {\r\n      if (createActivity === '') return setError('Activity is requried');\r\n    }\r\n    if (createActivity === 'newGame') {\r\n      if (createNewActivity === '') return setError('New Activity is required');\r\n    }\r\n    if (createDescription === '') return setError('Description is requried');\r\n    if (createLang === '') return setError('Language is requried');\r\n    if (createUsers.toString().includes('e')) return setError('Max Users can not contain e');\r\n    if (parseInt(createUsers) < 2 || parseInt(createUsers) > 16)\r\n      return setError('Max Users is must be between 2 and 16');\r\n\r\n    if (createGame !== 'newGame') {\r\n      setError('');\r\n      setLoading(true);\r\n\r\n      let blacklists = [];\r\n      var promise0 = (\r\n        await get(child(ref(database), `userLists/${currentUser.uid}/blacklist`))\r\n      ).val();\r\n      blacklists.push(promise0);\r\n\r\n      let photoURLs = [];\r\n      var promise1 = (await get(child(ref(database), `templates/allGames/${createGame}`))).val();\r\n      photoURLs.push(promise1);\r\n\r\n      Promise.allSettled([blacklists, photoURLs]).then((results) => {\r\n        blacklist = results[0].value;\r\n        photoURL = results[1].value;\r\n\r\n        const updates = {};\r\n        for (let i = 1; i < 17; i++) {\r\n          let char = (i + 9).toString(36).toUpperCase();\r\n          updates[`sessionActions/${currentUser.uid}/${char}/displayName`] = '';\r\n          updates[`sessionActions/${currentUser.uid}/${char}/isShift`] = false;\r\n          updates[`sessionActions/${currentUser.uid}/${char}/timestamp`] = 0;\r\n          updates[`sessionActions/${currentUser.uid}/${char}/userId`] = '';\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/color`] = 'cba';\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/image`] =\r\n            'https://i.imgur.com/yk5wTiF.png';\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/shift`] = 'Callout A (shift)';\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/text`] = 'Callout A';\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/time`] = 2;\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/type`] = 'alert';\r\n        }\r\n        updates[`sessionData/${currentUser.uid}/activity`] =\r\n          createActivity === 'newActivity' ? createNewActivity : createActivity;\r\n        updates[`sessionData/${currentUser.uid}/description`] = createDescription;\r\n        updates[`sessionData/${currentUser.uid}/game`] = createGame;\r\n        updates[`sessionData/${currentUser.uid}/isOpen`] = createOpen;\r\n        updates[`sessionData/${currentUser.uid}/isPublic`] = createPublic;\r\n        updates[`sessionData/${currentUser.uid}/lang`] = createLang;\r\n        updates[`sessionData/${currentUser.uid}/platform`] = createPlatform;\r\n        updates[`sessionData/${currentUser.uid}/sessionPhotoURL`] = photoURL;\r\n        updates[`sessionData/${currentUser.uid}/timestamp`] = serverTimestamp();\r\n        updates[`sessionData/${currentUser.uid}/usersCount`] = 1;\r\n        updates[`sessionData/${currentUser.uid}/usersMax`] = parseInt(createUsers);\r\n        updates[`sessionLists/${currentUser.uid}/whitelist/${currentUser.uid}`] = true;\r\n        updates[`sessionMessages/${currentUser.uid}/first/honor`] = 0;\r\n        updates[\r\n          `sessionMessages/${currentUser.uid}/first/message`\r\n        ] = `Session created successfully. You can invite others directly to this session with the following url: https://www.calloutsevolved.com/session/${currentUser.uid}`;\r\n        updates[`sessionMessages/${currentUser.uid}/first/timestamp`] = serverTimestamp();\r\n        updates[`sessionMessages/${currentUser.uid}/first/title`] = 'System';\r\n        updates[`sessionMessages/${currentUser.uid}/first/userId`] = currentUser.uid;\r\n        updates[`sessionMsgHonors/${currentUser.uid}/first/dishonors/system`] = true;\r\n        updates[`sessionMsgHonors/${currentUser.uid}/first/honors/system`] = true;\r\n        updates[`sessionSpeech/${currentUser.uid}/${currentUser.uid}/message`] = 'Muted';\r\n        updates[`sessionSpeech/${currentUser.uid}/${currentUser.uid}/title`] = 'Owner';\r\n        updates[`sessionSpeech/${currentUser.uid}/${currentUser.uid}/userId`] = currentUser.uid;\r\n        updates[`userData/${currentUser.uid}/sessionId`] = currentUser.uid;\r\n        if (createNewActivity) {\r\n          updates[`templates/allActivities/${createGame}/${createNewActivity}`] = true;\r\n        }\r\n        if (blacklist) {\r\n          updates[`sessionLists/${currentUser.uid}/blacklist`] = blacklist;\r\n        }\r\n        setLoading(false);\r\n        update(ref(database), updates);\r\n        // .then(() => {\r\n        //   router.push(`/session/${currentUser.uid}`);\r\n        // });\r\n      });\r\n    } else {\r\n      setError('');\r\n      setLoading(true);\r\n\r\n      let blacklists = [];\r\n      var promise = (\r\n        await get(child(ref(database), `userLists/${currentUser.uid}/blacklist`))\r\n      ).val();\r\n      blacklists.push(promise);\r\n\r\n      Promise.allSettled(blacklists).then((results) => {\r\n        results.forEach((result) => {\r\n          blacklist = result.value;\r\n        });\r\n\r\n        const updates = {};\r\n        for (let i = 1; i < 17; i++) {\r\n          let char = (i + 9).toString(36).toUpperCase();\r\n          updates[`sessionActions/${currentUser.uid}/${char}/displayName`] = '';\r\n          updates[`sessionActions/${currentUser.uid}/${char}/isShift`] = false;\r\n          updates[`sessionActions/${currentUser.uid}/${char}/timestamp`] = 0;\r\n          updates[`sessionActions/${currentUser.uid}/${char}/userId`] = '';\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/color`] = 'cba';\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/image`] =\r\n            'https://i.imgur.com/yk5wTiF.png';\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/shift`] = 'Callout A (shift)';\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/text`] = 'Callout A';\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/time`] = 2;\r\n          updates[`sessionButtons/${currentUser.uid}/${char}/type`] = 'alert';\r\n        }\r\n        updates[`sessionData/${currentUser.uid}/activity`] = createNewActivity;\r\n        updates[`sessionData/${currentUser.uid}/description`] = createDescription;\r\n        updates[`sessionData/${currentUser.uid}/game`] = createNewGame;\r\n        updates[`sessionData/${currentUser.uid}/isOpen`] = createOpen;\r\n        updates[`sessionData/${currentUser.uid}/isPublic`] = createPublic;\r\n        updates[`sessionData/${currentUser.uid}/lang`] = createLang;\r\n        updates[`sessionData/${currentUser.uid}/platform`] = createPlatform;\r\n        updates[`sessionData/${currentUser.uid}/sessionPhotoURL`] = createPhoto;\r\n        updates[`sessionData/${currentUser.uid}/timestamp`] = serverTimestamp();\r\n        updates[`sessionData/${currentUser.uid}/usersCount`] = 1;\r\n        updates[`sessionData/${currentUser.uid}/usersMax`] = parseInt(createUsers);\r\n        updates[`sessionLists/${currentUser.uid}/whitelist/${currentUser.uid}`] = true;\r\n        updates[`sessionMessages/${currentUser.uid}/first/honor`] = 0;\r\n        updates[\r\n          `sessionMessages/${currentUser.uid}/first/message`\r\n        ] = `Thank you for contributing the community! Session created successfully. You can invite others directly to this session with the following url: https://www.calloutsevolved.com/session/${currentUser.uid}`;\r\n        updates[`sessionMessages/${currentUser.uid}/first/timestamp`] = serverTimestamp();\r\n        updates[`sessionMessages/${currentUser.uid}/first/title`] = 'System';\r\n        updates[`sessionMessages/${currentUser.uid}/first/userId`] = currentUser.uid;\r\n        updates[`sessionMsgHonors/${currentUser.uid}/first/dishonors/system`] = true;\r\n        updates[`sessionMsgHonors/${currentUser.uid}/first/honors/system`] = true;\r\n        updates[`sessionSpeech/${currentUser.uid}/${currentUser.uid}/message`] = 'Muted';\r\n        updates[`sessionSpeech/${currentUser.uid}/${currentUser.uid}/title`] = 'Owner';\r\n        updates[`sessionSpeech/${currentUser.uid}/${currentUser.uid}/userId`] = currentUser.uid;\r\n        updates[`userData/${currentUser.uid}/sessionId`] = currentUser.uid;\r\n        updates[`templates/allGames/${createNewGame}`] = createPhoto;\r\n        if (createNewActivity) {\r\n          updates[\r\n            `templates/allActivities/${\r\n              createNewGame ? createNewGame : createGame\r\n            }/${createNewActivity}`\r\n          ] = true;\r\n        }\r\n        if (blacklist) {\r\n          updates[`sessionLists/${currentUser.uid}/blacklist`] = blacklist;\r\n        }\r\n        update(ref(database), updates).then(() => {\r\n          router.push(`/session/${currentUser.uid}`);\r\n        });\r\n        setLoading(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    get(child(ref(database), `templates/allGames`)).then((dataSnapshot) => {\r\n      if (dataSnapshot.exists) {\r\n        let obj = {};\r\n        dataSnapshot.forEach((child) => {\r\n          obj = { ...obj, [child.key]: child.val() };\r\n        });\r\n        setAllGames(obj);\r\n      }\r\n    });\r\n\r\n    let offset = Date.now() - 1800000; // 30 minutes\r\n    let unsubscribeSessions = onValue(\r\n      query(ref(database, 'sessionData'), orderByChild('timestamp')),\r\n      async (snapshot) => {\r\n        if (snapshot.exists()) {\r\n          let obj = {},\r\n            gameArr = [],\r\n            platformArr = [],\r\n            activityArr = [],\r\n            languageArr = [];\r\n          if (!currentUser) {\r\n            snapshot.forEach((snap) => {\r\n              if (snap.val().isPublic && snap.val().usersCount < snap.val().usersMax) {\r\n                obj = {\r\n                  ...obj,\r\n                  [snap.key]: snap.val(),\r\n                };\r\n                if (!gameArr.includes(snap.val().game)) {\r\n                  gameArr = [...gameArr, snap.val().game];\r\n                }\r\n                if (!platformArr.includes(snap.val().platform)) {\r\n                  platformArr = [...platformArr, snap.val().platform];\r\n                }\r\n                if (!activityArr.includes(snap.val().activity)) {\r\n                  activityArr = [...activityArr, snap.val().activity];\r\n                }\r\n                if (!languageArr.includes(snap.val().lang)) {\r\n                  languageArr = [...languageArr, snap.val().lang];\r\n                }\r\n              }\r\n            });\r\n            setDataObj(obj);\r\n            setGames(gameArr);\r\n            setPlatforms(platformArr);\r\n            setActivitys(activityArr);\r\n            setLanguages(languageArr);\r\n          } else {\r\n            let sessionKeys = [];\r\n            snapshot.forEach((snap) => {\r\n              if (snap.val().isPublic && snap.val().usersCount < snap.val().usersMax) {\r\n                sessionKeys.push(snap.key);\r\n              }\r\n            });\r\n            for (const sessionKey of sessionKeys) {\r\n              const contents = await get(\r\n                child(ref(database), `sessionLists/${sessionKey}/blacklist/${currentUser.uid}`)\r\n              );\r\n              console.error(contents.val());\r\n              if (contents.val() !== true) {\r\n                let tar = snapshot.child(result.value);\r\n                obj = {\r\n                  ...obj,\r\n                  [tar.key]: { ...tar.val() },\r\n                };\r\n                if (!gameArr.includes(tar.val().game)) {\r\n                  gameArr = [...gameArr, tar.val().game];\r\n                }\r\n                if (!platformArr.includes(tar.val().platform)) {\r\n                  platformArr = [...platformArr, tar.val().platform];\r\n                }\r\n                if (!activityArr.includes(tar.val().activity)) {\r\n                  activityArr = [...activityArr, tar.val().activity];\r\n                }\r\n                if (!languageArr.includes(tar.val().lang)) {\r\n                  languageArr = [...languageArr, tar.val().lang];\r\n                }\r\n              }\r\n            }\r\n            Promise.allSettled(sessionKeys).then((results) => {\r\n              results.forEach((result) => {\r\n                let tar = snapshot.child(result.value);\r\n                obj = {\r\n                  ...obj,\r\n                  [tar.key]: { ...tar.val() },\r\n                };\r\n                if (!gameArr.includes(tar.val().game)) {\r\n                  gameArr = [...gameArr, tar.val().game];\r\n                }\r\n                if (!platformArr.includes(tar.val().platform)) {\r\n                  platformArr = [...platformArr, tar.val().platform];\r\n                }\r\n                if (!activityArr.includes(tar.val().activity)) {\r\n                  activityArr = [...activityArr, tar.val().activity];\r\n                }\r\n                if (!languageArr.includes(tar.val().lang)) {\r\n                  languageArr = [...languageArr, tar.val().lang];\r\n                }\r\n              });\r\n              setDataObj(obj);\r\n              setGames(gameArr);\r\n              setPlatforms(platformArr);\r\n              setActivitys(activityArr);\r\n              setLanguages(languageArr);\r\n            });\r\n            snapshot.forEach((snap) => {\r\n              if (snap.val().isPublic && snap.val().usersCount < snap.val().usersMax) {\r\n                get(\r\n                  child(ref(database), `sessionLists/${snap.key}/blacklist/${currentUser.uid}`)\r\n                ).then((snaps) => {\r\n                  if (!snaps.exists) {\r\n                    return () => {\r\n                      setDataObj({ ...dataObj, [snap.key]: snap.val() });\r\n                      if (!games.includes(snap.val().game)) {\r\n                        setGames([...games, snap.val().game]);\r\n                      }\r\n                      if (!platformArr.includes(snap.val().platform)) {\r\n                        setPlatforms([...platforms, snap.val().platform]);\r\n                      }\r\n                      if (!activityArr.includes(snap.val().activity)) {\r\n                        setActivitys([...activitys, snap.val().activity]);\r\n                      }\r\n                      if (!languageArr.includes(snap.val().lang)) {\r\n                        setLanguages([...languages, snap.val().lang]);\r\n                      }\r\n                    };\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          setDataObj('No Sessions Available');\r\n          setSessions('No Sessions Available');\r\n          setGames([]);\r\n          setPlatforms([]);\r\n          setActivitys([]);\r\n        }\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      unsubscribeSessions();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setValue('createActivity', '');\r\n    setValue('createNewActivity', '');\r\n    if (createGame === '' || createGame === 'otherVideoGame') {\r\n      setAllActivities([]);\r\n    } else {\r\n      let unsubscribeActivities = onValue(\r\n        query(ref(database, `templates/allActivities/${createGame}`)),\r\n        (snapshot) => {\r\n          if (snapshot.exists) {\r\n            let allActivitiesArr = [];\r\n            snapshot.forEach((child) => {\r\n              if (!allActivitiesArr.includes(child.key)) {\r\n                allActivitiesArr = [...allActivitiesArr, child.key];\r\n              }\r\n            });\r\n            setAllActivities(allActivitiesArr);\r\n          }\r\n        }\r\n      );\r\n\r\n      return () => {\r\n        unsubscribeActivities();\r\n      };\r\n    }\r\n  }, [createGame]);\r\n\r\n  // 3 dropdown menu to filter platform, game, activity, one text box to search description,\r\n  useEffect(() => {\r\n    const filterGroups = () => {\r\n      if (\r\n        dataObj &&\r\n        dataObj !== 'No Sessions Available' &&\r\n        dataObj !== {} &&\r\n        dataObj !== props?.data\r\n      ) {\r\n        let obj = {};\r\n        Object.entries(dataObj).map((child) => {\r\n          if (Object.keys(obj).length < limitNum) {\r\n            if (\r\n              activity !== 'all' &&\r\n              game !== 'all' &&\r\n              language !== 'all' &&\r\n              platform !== 'all' &&\r\n              search\r\n            ) {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].game === game &&\r\n                child[1].lang === language &&\r\n                child[1].platform === platform &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (\r\n              activity !== 'all' &&\r\n              game !== 'all' &&\r\n              language !== 'all' &&\r\n              platform !== 'all'\r\n            ) {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].game === game &&\r\n                child[1].lang === language &&\r\n                child[1].platform === platform\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && game !== 'all' && language !== 'all' && search) {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].game === game &&\r\n                child[1].lang === language &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && game !== 'all' && platform !== 'all' && search) {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].game === game &&\r\n                child[1].platform === platform &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && language !== 'all' && platform !== 'all' && search) {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].lang === language &&\r\n                child[1].platform === platform &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (game !== 'all' && language !== 'all' && platform !== 'all' && search) {\r\n              if (\r\n                child[1].game === game &&\r\n                child[1].lang === language &&\r\n                child[1].platform === platform &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && game !== 'all' && language !== 'all') {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].game === game &&\r\n                child[1].lang === language\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && game !== 'all' && platform !== 'all') {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].game === game &&\r\n                child[1].platform === platform\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && game !== 'all' && search) {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].game === game &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && language !== 'all' && platform !== 'all') {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].lang === language &&\r\n                child[1].platform === platform\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && language !== 'all' && search) {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].lang === language &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && platform !== 'all' && search) {\r\n              if (\r\n                child[1].activity === activity &&\r\n                child[1].platform === platform &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (game !== 'all' && language !== 'all' && platform !== 'all') {\r\n              if (\r\n                child[1].game === game &&\r\n                child[1].lang === language &&\r\n                child[1].platform === platform\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (game !== 'all' && language !== 'all' && search) {\r\n              if (\r\n                child[1].game === game &&\r\n                child[1].lang === language &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (game !== 'all' && platform !== 'all' && search) {\r\n              if (\r\n                child[1].game === game &&\r\n                child[1].platform === platform &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (language !== 'all' && platform !== 'all' && search) {\r\n              if (\r\n                child[1].lang === language &&\r\n                child[1].platform === platform &&\r\n                child[1].description.includes(search)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && game !== 'all') {\r\n              if (child[1].activity === activity && child[1].game === game) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && language !== 'all') {\r\n              if (child[1].activity === activity && child[1].lang === language) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && platform !== 'all') {\r\n              if (child[1].activity === activity && child[1].platform === platform) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all' && search) {\r\n              if (child[1].activity === activity && child[1].description.includes(search)) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (game !== 'all' && language !== 'all') {\r\n              if (child[1].game === game && child[1].lang === language) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (game !== 'all' && platform !== 'all') {\r\n              if (child[1].game === game && child[1].platform === platform) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (game !== 'all' && search) {\r\n              if (child[1].game === game && child[1].description.includes(search)) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (language !== 'all' && platform !== 'all') {\r\n              if (child[1].lang === language && child[1].platform === platform) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (language !== 'all' && search) {\r\n              if (child[1].lang === language && child[1].description.includes(search)) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (platform !== 'all' && search) {\r\n              if (child[1].platform === platform && child[1].description.includes(search)) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (activity !== 'all') {\r\n              if (child[1].activity === activity) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (game !== 'all') {\r\n              if (child[1].game === game) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (language !== 'all') {\r\n              if (child[1].lang === language) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (platform !== 'all') {\r\n              if (child[1].platform === platform) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else if (search) {\r\n              if (child[1].description.includes(search)) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else {\r\n              obj = {\r\n                ...obj,\r\n                [child[0]]: { ...child[1] },\r\n              };\r\n            }\r\n          }\r\n        });\r\n        setSessions(obj);\r\n      }\r\n    };\r\n\r\n    filterGroups();\r\n  }, [activity, game, language, platform, search, dataObj]);\r\n\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Callouts Evolved | LFG</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Join groups focused on efficiently completing any video game activity.\"\r\n        />\r\n      </Head>\r\n      <h1>LFG</h1>\r\n      <div>\r\n        <div>\r\n          <h4>filter</h4>\r\n          <span>\r\n            <Input\r\n              autoComplete=\"off\"\r\n              label=\"Search\"\r\n              name=\"search\"\r\n              placeholder=\"Filter Sessions\"\r\n              title=\"Filter available sessions based on description.\"\r\n              type=\"text\"\r\n              register={register('search')}\r\n              val={search}\r\n            />\r\n          </span>\r\n          <span>\r\n            <Select\r\n              autoComplete=\"off\"\r\n              label=\"Game\"\r\n              name=\"game\"\r\n              placeholder=\"Select a Game\"\r\n              title=\"Select a Game\"\r\n              register={register('game')}>\r\n              <option value=\"all\">All Games</option>\r\n              {games.map((v, i) => (\r\n                <option key={i} value={v}>\r\n                  {v}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </span>\r\n          <span>\r\n            <Select\r\n              autoComplete=\"off\"\r\n              label={\r\n                <span>\r\n                  Platform{' '}\r\n                  {platform === 'all' ? (\r\n                    <CrossPlatformIcon width=\"1em\" height=\"1em\" />\r\n                  ) : platform === 'nintendo' ? (\r\n                    <NintendoIcon width=\"1em\" height=\"1em\" n />\r\n                  ) : platform === 'playstation' ? (\r\n                    <PlayStationIcon width=\"1em\" height=\"1em\" />\r\n                  ) : platform === 'steam' ? (\r\n                    <SteamIcon width=\"1em\" height=\"1em\" />\r\n                  ) : platform === 'xbox' ? (\r\n                    <XboxIcon width=\"1em\" height=\"1em\" />\r\n                  ) : platform === 'other' ? (\r\n                    <OtherPlatformIcon width=\"1em\" height=\"1em\" />\r\n                  ) : (\r\n                    <CrossPlatformIcon width=\"1em\" height=\"1em\" />\r\n                  )}\r\n                </span>\r\n              }\r\n              name=\"platform\"\r\n              placeholder=\"Select a Platform\"\r\n              title=\"Select a Platform\"\r\n              register={register('platform')}>\r\n              <option value=\"all\">All Platforms</option>\r\n              {platforms.map((v, i) => (\r\n                <option key={i} value={v}>\r\n                  {v !== 'all' && `${v[0].toUpperCase() + v.slice(1)}`}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </span>\r\n          <span>\r\n            <Select\r\n              autoComplete=\"off\"\r\n              label=\"Activity\"\r\n              name=\"activity\"\r\n              placeholder=\"Select a Activity\"\r\n              title=\"Select a Activity\"\r\n              register={register('activity')}>\r\n              <option value=\"all\">All Activities</option>\r\n              {activitys.map((v, i) => (\r\n                <option key={i} value={v}>\r\n                  {v}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </span>\r\n          <span>\r\n            <Select\r\n              autoComplete=\"off\"\r\n              label=\"Language\"\r\n              name=\"language\"\r\n              placeholder=\"Select a Language\"\r\n              title=\"Select a Language\"\r\n              register={register('language')}>\r\n              <option value=\"all\">All Languages</option>\r\n              {languages.map((v, i) => (\r\n                <option key={i} value={v}>\r\n                  {v.toUpperCase()}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </span>\r\n          <br />\r\n          <button\r\n            onClick={() => {\r\n              setValue('activity', 'all');\r\n              setValue('game', 'all');\r\n              setValue('platform', 'all');\r\n              setValue('language', 'all');\r\n              setValue('search', '');\r\n            }}>\r\n            reset filter\r\n          </button>\r\n        </div>\r\n        {currentUser && !currentUser.isAnonymous ? (\r\n          <div>\r\n            <h4>Create Session</h4>\r\n            <form className={`${styles.form} signInForm`} onSubmit={handleSubmit(onSubmit)}>\r\n              <fieldset className={styles.fieldset} role=\"group\" aria-label=\"Sign In\">\r\n                {error !== '' && <span className={styles.formTextError}>{error}</span>}\r\n                <Select\r\n                  autoComplete=\"off\"\r\n                  label=\"Game\"\r\n                  name=\"createGame\"\r\n                  placeholder=\"Select a Game\"\r\n                  title=\"Select a Game\"\r\n                  required={true}\r\n                  register={register('createGame', { required: true })}>\r\n                  <option value=\"\">Select Game</option>\r\n                  {Object.keys(allGames).map((key, i) => {\r\n                    return (\r\n                      <option key={i} value={key}>\r\n                        {key}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                  <option value=\"newGame\">New Game</option>\r\n                </Select>\r\n                {createGame === '' ? (\r\n                  <Select\r\n                    autoComplete=\"off\"\r\n                    label=\"Activity\"\r\n                    name=\"createActivity\"\r\n                    placeholder=\"Select an Activity\"\r\n                    title=\"Select an Activity\"\r\n                    required={true}\r\n                    register={register('createActivity', { required: true })}>\r\n                    <option value=\"\">Select Activity</option>\r\n                    <option disabled>Select a Game First</option>\r\n                  </Select>\r\n                ) : createGame === 'newGame' ? (\r\n                  <>\r\n                    {userIsPremium ? (\r\n                      <>\r\n                        <Input\r\n                          autoComplete=\"off\"\r\n                          error={errors.createNewGame}\r\n                          label=\"New Game\"\r\n                          name=\"createNewGame\"\r\n                          placeholder=\"What game are you playing?\"\r\n                          required=\"true\"\r\n                          register={register('createNewGame', {\r\n                            required: true,\r\n                          })}\r\n                          title=\"Must be at least 3 characters in format\"\r\n                          type=\"text\"\r\n                          val={createNewGame}\r\n                        />\r\n                        <Input\r\n                          autoComplete=\"off\"\r\n                          error={errors.createPhoto}\r\n                          label=\"Game Art from IGDB\"\r\n                          name=\"createPhoto\"\r\n                          placeholder=\"What game are you playing?\"\r\n                          required=\"true\"\r\n                          register={register('createPhoto', {\r\n                            required: true,\r\n                            pattern: /https:\\/\\/static-cdn\\.jtvnw\\.net\\/.*\\.jpg/i,\r\n                          })}\r\n                          title=\"Must begin with https://static-cdn.jtvnw.net/ and end with .jpg\"\r\n                          type=\"text\"\r\n                          val={createPhoto}\r\n                        />\r\n                        <Input\r\n                          autoComplete=\"off\"\r\n                          error={errors.createNewActivity}\r\n                          label=\"New Activity\"\r\n                          name=\"createNewActivity\"\r\n                          placeholder=\"Any other requirements?\"\r\n                          required=\"true\"\r\n                          register={register('createNewActivity', {\r\n                            required: true,\r\n                          })}\r\n                          title=\"Must be at least 3 characters in format\"\r\n                          type=\"text\"\r\n                          val={createNewActivity}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <p>Only MVPs can create new games</p>\r\n                        <span>\r\n                          <Select\r\n                            autoComplete=\"off\"\r\n                            label=\"Activity\"\r\n                            name=\"createActivity\"\r\n                            placeholder=\"Select an Activity\"\r\n                            title=\"Select an Activity\"\r\n                            required={true}\r\n                            register={register('createActivity', { required: true })}>\r\n                            <option value=\"\">Select Activity</option>\r\n                          </Select>\r\n                        </span>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Select\r\n                      autoComplete=\"off\"\r\n                      label=\"Activity\"\r\n                      name=\"createActivity\"\r\n                      placeholder=\"Select an Activity\"\r\n                      title=\"Select an Activity\"\r\n                      required={true}\r\n                      register={register('createActivity', { required: true })}>\r\n                      <option value=\"\">Select Activity</option>\r\n                      {allActivities.map((v, i) => (\r\n                        <option key={i} value={v}>\r\n                          {v}\r\n                        </option>\r\n                      ))}\r\n                      <option value=\"newActivity\">New Activity</option>\r\n                    </Select>\r\n                    {createActivity === 'newActivity' && (\r\n                      <>\r\n                        {userIsPremium ? (\r\n                          <>\r\n                            <Input\r\n                              autoComplete=\"off\"\r\n                              error={errors.createNewActivity}\r\n                              label=\"New Activity\"\r\n                              name=\"createNewActivity\"\r\n                              placeholder=\"Any other requirements?\"\r\n                              required=\"true\"\r\n                              register={register('createNewActivity', {\r\n                                required: true,\r\n                              })}\r\n                              title=\"Must be at least 3 characters in format\"\r\n                              type=\"text\"\r\n                              val={createNewActivity}\r\n                            />\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <p>Only MVPs can create new activities</p>\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n                <Input\r\n                  autoComplete=\"off\"\r\n                  error={errors.createDescription}\r\n                  label=\"Description\"\r\n                  name=\"createDescription\"\r\n                  placeholder=\"Any other requirements?\"\r\n                  required=\"true\"\r\n                  register={register('createDescription', {\r\n                    required: true,\r\n                  })}\r\n                  title=\"Must be at least 3 characters\"\r\n                  type=\"text\"\r\n                  val={createDescription}\r\n                />\r\n                <Select\r\n                  autoComplete=\"off\"\r\n                  label={\r\n                    <span>\r\n                      Platform{' '}\r\n                      {createPlatform === 'all' ? (\r\n                        <CrossPlatformIcon width=\"1em\" height=\"1em\" />\r\n                      ) : createPlatform === 'nintendo' ? (\r\n                        <NintendoIcon width=\"1em\" height=\"1em\" n />\r\n                      ) : createPlatform === 'playstation' ? (\r\n                        <PlayStationIcon width=\"1em\" height=\"1em\" />\r\n                      ) : createPlatform === 'steam' ? (\r\n                        <SteamIcon width=\"1em\" height=\"1em\" />\r\n                      ) : createPlatform === 'xbox' ? (\r\n                        <XboxIcon width=\"1em\" height=\"1em\" />\r\n                      ) : createPlatform === 'other' ? (\r\n                        <OtherPlatformIcon width=\"1em\" height=\"1em\" />\r\n                      ) : (\r\n                        <CrossPlatformIcon width=\"1em\" height=\"1em\" />\r\n                      )}\r\n                    </span>\r\n                  }\r\n                  name=\"createPlatform\"\r\n                  placeholder=\"Select a Platform\"\r\n                  title=\"Select a Platform\"\r\n                  required={true}\r\n                  register={register('createPlatform', { required: true })}>\r\n                  <option value=\"all\">All Platforms</option>\r\n                  <option value=\"xbox\">Xbox</option>\r\n                  <option value=\"playstation\">Playstation</option>\r\n                  <option value=\"nintendo\">Nintendo</option>\r\n                  <option value=\"steam\">Steam</option>\r\n                  <option value=\"other\">Other</option>\r\n                </Select>\r\n                <Select\r\n                  autoComplete=\"off\"\r\n                  label=\"Language\"\r\n                  name=\"createLang\"\r\n                  placeholder=\"Select a Language\"\r\n                  title=\"Select a Language\"\r\n                  required={true}\r\n                  register={register('createLang', { required: true })}>\r\n                  <option value=\"\">Select a Language</option>\r\n                  {allLanguagesArr.map((v, i) => (\r\n                    <option key={i} value={v}>\r\n                      {v}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n                <Input\r\n                  autoComplete=\"off\"\r\n                  error={errors.createUsers}\r\n                  label=\"Max Users\"\r\n                  name=\"createUsers\"\r\n                  placeholder=\"Largest group or team size?\"\r\n                  required=\"true\"\r\n                  register={register('createUsers', {\r\n                    required: true,\r\n                    min: {\r\n                      value: 2,\r\n                      message: 'Please enter a number between 2 - 16',\r\n                    },\r\n                    max: {\r\n                      value: 16,\r\n                      message: 'Please enter a number between 2 - 16',\r\n                    },\r\n                  })}\r\n                  title=\"Must be at least 2\"\r\n                  type=\"number\"\r\n                  val={createUsers}\r\n                />\r\n                {userIsPremium && (\r\n                  <>\r\n                    <Checkbox\r\n                      autoComplete=\"off\"\r\n                      error={errors.createOpen}\r\n                      label=\"Anonymous Users\"\r\n                      name=\"createOpen\"\r\n                      placeholder=\"Any other requirements?\"\r\n                      required=\"true\"\r\n                      register={register('createOpen')}\r\n                      title=\"Require users to create an account before joining.\"\r\n                      type=\"checkbox\"\r\n                      val={createOpen}\r\n                      valTrue=\"Allowed\"\r\n                      valFalse=\"Denied\"\r\n                    />\r\n                    <Checkbox\r\n                      autoComplete=\"off\"\r\n                      error={errors.createPublic}\r\n                      label=\"Auto LFG\"\r\n                      name=\"createPublic\"\r\n                      placeholder=\"Show your session on the lfg page\"\r\n                      required=\"true\"\r\n                      register={register('createPublic')}\r\n                      title=\"Automatically post this session to LFG.\"\r\n                      type=\"checkbox\"\r\n                      val={createPublic}\r\n                      valTrue=\"True\"\r\n                      valFalse=\"False\"\r\n                    />\r\n                  </>\r\n                )}\r\n                <div className={styles.formSubmitWrapper}>\r\n                  <button type=\"submit\" className={styles.formSubmit}>\r\n                    {loading ? 'Loading...' : 'Submit'}\r\n                  </button>\r\n                </div>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <p>Please sign in to create a session</p>\r\n        )}\r\n\r\n        <div>\r\n          <h4>lfgs</h4>\r\n\r\n          {sessions === 'No Sessions Available' ? (\r\n            <div>\r\n              {game || platform || activity || search\r\n                ? 'There are no sessions available. Consider using less filters.'\r\n                : 'There are no sessions available. Consider creating your own.'}\r\n            </div>\r\n          ) : (\r\n            Object.entries(sessions).map(([key, data]) => {\r\n              return (\r\n                <Link href={`session/join/${key}`} key={key} passHref>\r\n                  <a className={`groupLink${sessions === { preload } ? ' sr-only' : ''}`}>\r\n                    {data.sessionPhotoURL && (\r\n                      <span className=\"groupImageWrapper\">\r\n                        <img src={data.sessionPhotoURL} alt={data.game} height={192} width={144} />\r\n                      </span>\r\n                    )}\r\n                    <span>\r\n                      <small>{`(${data.lang.toUpperCase()}) ${data.activity}`}</small>\r\n                      <p>{`${data.description}`}</p>\r\n                      <small>\r\n                        {`${data.game}`}&nbsp;\r\n                        <span>\r\n                          {data.platform === 'all' ? (\r\n                            <CrossPlatformIcon width=\"1em\" height=\"1em\" />\r\n                          ) : data.platform === 'nintendo' ? (\r\n                            <NintendoIcon width=\"1em\" height=\"1em\" n />\r\n                          ) : data.platform === 'playstation' ? (\r\n                            <PlayStationIcon width=\"1em\" height=\"1em\" />\r\n                          ) : data.platform === 'steam' ? (\r\n                            <SteamIcon width=\"1em\" height=\"1em\" />\r\n                          ) : data.platform === 'xbox' ? (\r\n                            <XboxIcon width=\"1em\" height=\"1em\" />\r\n                          ) : (\r\n                            <OtherPlatformIcon width=\"1em\" height=\"1em\" />\r\n                          )}\r\n                        </span>\r\n                        &nbsp;\r\n                        {`${data.usersCount}/${data.usersMax}`}\r\n                      </small>\r\n                    </span>\r\n                  </a>\r\n                </Link>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async () => {\r\n  try {\r\n    return {\r\n      props: {\r\n        data: { ...preload },\r\n      },\r\n    };\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    return {\r\n      props: { data: 'error' },\r\n    };\r\n  }\r\n};\r\n\r\nexport default Lfg;\r\n","C:\\Dev\\calloutsevolved\\pages\\register.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\session\\index.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\session\\[id].js",["314"],[],"import React, { useEffect, useState } from 'react';\r\nimport { child, get, onValue, push, ref, runTransaction, set, update } from 'firebase/database';\r\n\r\nimport { database } from '../../firebase/firebaseClient';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useRouter } from 'next/router';\r\nimport { useSettings } from '../../context/SettingsContext';\r\n\r\nconst SessionId = (props) => {\r\n  const { currentUser } = useAuth();\r\n  const { ahk } = useSettings();\r\n  const [sessionUsers, setSessionUsers] = useState({});\r\n  const [sessionData, setSessionData] = useState(props.sessionData);\r\n  const router = useRouter();\r\n  const { id } = router.query.slug;\r\n\r\n  useEffect(() => {\r\n    async function startWatchingUsers() {\r\n      onValue(child(ref(database), `sessionLists/${id}/whitelist`), (snapshot) => {\r\n        if (!snapshot.val()) {\r\n          set(ref(database, `sessionData/${id}`), null);\r\n          router.push(`/lfg`);\r\n        } else if (!snapshot[currentUser.uid]) {\r\n          // Change player's session id if it indicates that they are in this session\r\n          get(child(ref(database), `userData/${currentUser.uid}/sessionId`)).then((snapshot1) => {\r\n            if (snapshot1.exists) {\r\n              if (snapshot1.val() === id) {\r\n                update(ref(database), {\r\n                  [`userData/${playerId}/sessionId`]: null,\r\n                });\r\n              }\r\n            }\r\n            get(child(ref(database), `sessionLists/${id}/blacklist/${currentUser.uid}`)).then(\r\n              (snapshot2) => {\r\n                if (snapshot2.exists) {\r\n                  router.push(`/lfg`);\r\n                } else {\r\n                  router.push(`/join/${id}`);\r\n                }\r\n              }\r\n            );\r\n          });\r\n        } else if (currentUser.uid === sessionData.ownerId) {\r\n          let blacklist = {};\r\n          const buildBlacklist = Object.entries(snapshot.val()).map(([uid, value]) => {\r\n            const getBlacklists = async () => {\r\n              const playerBl = await get(child(ref(database), `userLists/${uid}/blacklist`));\r\n              if (playerBl) {\r\n                Object.entries(playerBL.val()).map(([uidBl, value]) => {\r\n                  blacklist = { ...blacklist, [uidBl]: true };\r\n                });\r\n              }\r\n            };\r\n\r\n            return getBlacklists();\r\n          });\r\n\r\n          Promise.all(buildBlacklist).then(() => {\r\n            set(ref(database, `sessionLists/${id}/blacklist`), { blacklist });\r\n          });\r\n\r\n          let userlist = {};\r\n          const buildUserlist = Object.entries(snapshot.val()).map(([uid, value]) => {\r\n            const getUserlists = async () => {\r\n              const sessionWl = await get(child(ref(database), `userData/${uid}`));\r\n              if (sessionWl) {\r\n                Object.entries(sessionWl.val()).map(([uidWl, value]) => {\r\n                  userlist = { ...userlist, [uidWl]: value };\r\n                });\r\n              }\r\n            };\r\n\r\n            return buildUserlist();\r\n          });\r\n\r\n          Promise.all(buildUserlist).then(() => {\r\n            setSessionUsers(userlist);\r\n          });\r\n        } else {\r\n          let userlist = {};\r\n          const buildUserlist = Object.entries(snapshot.val()).map(([uid, value]) => {\r\n            const getUserlists = async () => {\r\n              const sessionWl = await get(child(ref(database), `userData/${uid}`));\r\n              if (sessionWl) {\r\n                Object.entries(sessionWl.val()).map(([uidWl, value]) => {\r\n                  userlist = { ...userlist, [uidWl]: value };\r\n                });\r\n              }\r\n            };\r\n\r\n            return buildUserlist();\r\n          });\r\n\r\n          Promise.all(buildUserlist).then(() => {\r\n            setSessionUsers(userlist);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    async function startWatchingSession() {\r\n      onValue(child(ref(database), `sessionData/${id}`), (snapshot) => {\r\n        if (snapshot.val()) {\r\n          setSessionData(snapshot.val());\r\n        }\r\n      });\r\n    }\r\n\r\n    if (!currentUser) {\r\n      router.push(`/join/${id}`);\r\n    } else {\r\n      startWatchingUsers();\r\n      startWatchingSession();\r\n    }\r\n  }, [currentUser, id, router]);\r\n\r\n  // remove player function\r\n  const removePlayer = (playerId = currentUser.uid, blacklist = false) => {\r\n    function remove() {\r\n      if (blacklist) {\r\n        update(ref(database), {\r\n          [`sessionLists/${sessionId}/blacklist/${playerId}`]: true,\r\n        });\r\n      }\r\n\r\n      // Update the session whitelist if it indicates that the player is in this session\r\n      get(child(ref(database), `sessionLists/${sessionId}/whitelist`)).then((snapshot2) => {\r\n        if (snapshot2.exists) {\r\n          if (snapshot2.val()[playerId]) {\r\n            // remove player entry from usersCount.\r\n            update(ref(database), {\r\n              [`sessionData/${sessionId}/usersCount`]: `${firebase.database.ServerValue.increment(\r\n                -1\r\n              )}`,\r\n            });\r\n            // remove player from current whitelist, this will redirect them to /lfg.\r\n            update(ref(database), {\r\n              [`sessionLists/${sessionId}/whitelist/${playerId}`]: null,\r\n            });\r\n          }\r\n\r\n          // if the owner leaves the session, delete the session\r\n          if (snapshot2.size <= 1 || playerId === sessionData.ownerId) {\r\n            // delete the session\r\n            update(ref(database), {\r\n              [`sessionLists/${sessionId}`]: null,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    try {\r\n      if (playerId === currentUser.uid || currentUser.uid === sessionData.ownerId) {\r\n        remove();\r\n      } else if (!currentUser.isAnonymous) {\r\n        // if the current user is not anonymous then let them remove anonymous players\r\n        get(child(ref(database), `userData/${playerId}/displayName`)).then((snapshot) => {\r\n          if (snapshot.exists) {\r\n            if (snapshot.val.toLowerCase().startsWith('anonymous ')) {\r\n              remove();\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error removing player: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => {\r\n          removePlayer();\r\n        }}>\r\n        Leave\r\n      </button>\r\n      <div>\r\n        {sessionUsers &&\r\n          Object.entries(sessionUsers).map(([uid, value]) => (\r\n            <div key={uid}>\r\n              <p>\r\n                {' '}\r\n                key: {value?.uid}\r\n                <br />\r\n                {value &&\r\n                  Object.entries(value).map(([key2, value2]) => (\r\n                    <span key={key2}>\r\n                      {key2} :<span>{value2}</span> <br />\r\n                    </span>\r\n                  ))}\r\n              </p>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div>\r\n        <p>\r\n          SessionData : <br />\r\n          activity: {data?.activity}\r\n          <br />\r\n          description: {data?.description}\r\n          <br />\r\n          game: {data?.game}\r\n          <br />\r\n          ownerId: {data?.description}\r\n          <br />\r\n          platform: {data?.platform}\r\n          <br />\r\n          timestamp: {data?.timestamp && new Date(data?.timestamp).toLocaleString()}\r\n          <br />\r\n          usersCount: {data?.usersCount}\r\n          <br />\r\n          usersMax: {data?.usersMax}\r\n          <br />\r\n        </p>\r\n      </div>\r\n      <div>stripe</div>\r\n      <form style={{ display: 'none' }}>\r\n        <input disabled id=\"closeGameChat\" value={ahk.closeGameChat} type=\"text\" />\r\n        <input disabled id=\"delayGameChat\" value={ahk.delayGameChat} type=\"number\" />\r\n        <input disabled id=\"openGameChat\" value={ahk.openGameChat} type=\"text\" />\r\n        <input disabled id=\"sendGameChat\" value={ahk.sendGameChat} type=\"text\" />\r\n        <input disabled id=\"sendInGameMsg\" value={ahk.sendInGameMsg} type=\"text\" />\r\n        <input disabled id=\"triggerMode\" value={ahk.triggerMode} type=\"text\" />\r\n        <input disabled id=\"triggerToggle\" value={ahk.triggerToggle} type=\"text\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async (context) => {\r\n  const { id } = context.query;\r\n\r\n  const dbRef = ref(database);\r\n  try {\r\n    const res = await get(child(dbRef, `sessionData/${id}`));\r\n    const sessionData = await res.val();\r\n    return {\r\n      props: { sessionData: sessionData },\r\n    };\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    return {\r\n      props: { sessionData: 'error' },\r\n    };\r\n  }\r\n};\r\n\r\nexport default SessionId;\r\n","C:\\Dev\\calloutsevolved\\pages\\updateProfile.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\_app.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\_document.js",[],[],"C:\\Dev\\calloutsevolved\\components\\template\\index.jsx",[],[],"C:\\Dev\\calloutsevolved\\pages\\api\\hello.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\sessions.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\sitemap.xml.js",[],[],"C:\\Dev\\calloutsevolved\\lib\\markdownToHtml.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\blog\\index.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\blog\\[slug].js",[],[],"C:\\Dev\\calloutsevolved\\lib\\getPosts.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\forgot-password.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\session\\join\\index.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\session\\join\\[id].js",[],[],"C:\\Dev\\calloutsevolved\\components\\auth\\resetpassword.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\auth\\signin.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\auth\\signup.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\auth\\updatedisplayname.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\auth\\updateemail.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\auth\\updatepassword.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\ui\\input.jsx",[],[],"C:\\Dev\\calloutsevolved\\pages\\signin.js",[],[],"C:\\Dev\\calloutsevolved\\components\\alert.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\auth\\authcheckbox.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\auth\\authinput.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\auth\\authsubmit.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\avatar.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\container.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\cover-image.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\date-formatter.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\DisplayData.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\ExampleEventTag.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\header.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\hero-post.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\intro.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\Layout.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\ManageSub.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\meta.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\more-stories.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\post-body.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\post-footer.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\post-header.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\post-layout.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\post-preview.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\post-title.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\ui\\checkbox.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\ui\\Navbar.jsx",[],[],"C:\\Dev\\calloutsevolved\\components\\ui\\radio.jsx",[],[],"C:\\Dev\\calloutsevolved\\pages\\group\\index.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\group\\join\\index.js",[],[],"C:\\Dev\\calloutsevolved\\pages\\group\\join\\[id].js",[],[],"C:\\Dev\\calloutsevolved\\pages\\group\\[id].js",["315"],[],"C:\\Dev\\calloutsevolved\\pages\\groups.js",["316","317","318"],[],"import React, { useEffect, useState } from 'react';\r\nimport { get, onValue, orderByChild, query, ref, startAt } from 'firebase/database';\r\nimport { useForm, useWatch } from 'react-hook-form';\r\n\r\nimport Head from 'next/head';\r\nimport Image from 'next/image';\r\nimport Input from '../components/ui/input';\r\nimport Link from 'next/link';\r\nimport { database } from '../firebase/firebaseClient';\r\nimport styles from '../styles/groups.module.css';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst preload = {\r\n  0: {\r\n    activity: 'Vow of the Disciple',\r\n    description: '3 man flawless',\r\n    game: 'Destiny 2',\r\n    isPublic: true,\r\n    lang: 'en',\r\n    platform: 'All platforms',\r\n    usersCount: 1,\r\n    usersMax: 6,\r\n  },\r\n  1: {\r\n    activity: 'Last Wish',\r\n    description: 'Fresh kwtd',\r\n    game: 'Destiny 2',\r\n    isPublic: true,\r\n    lang: 'en',\r\n    platform: 'All platforms',\r\n    usersCount: 1,\r\n    usersMax: 6,\r\n  },\r\n  2: {\r\n    activity: 'Garden of Salvation',\r\n    description: 'Divinity run',\r\n    game: 'Destiny 2',\r\n    isPublic: true,\r\n    lang: 'en',\r\n    platform: 'xbox',\r\n    usersCount: 1,\r\n    usersMax: 6,\r\n  },\r\n  2: {\r\n    activity: 'Deep Stone Crypt',\r\n    description: 'All Challenges',\r\n    game: 'Destiny 2',\r\n    isPublic: true,\r\n    lang: 'en',\r\n    platform: 'xbox',\r\n    usersCount: 1,\r\n    usersMax: 6,\r\n  },\r\n};\r\n\r\nconst Groups = (props) => {\r\n  const { currentUser } = useAuth();\r\n  const [limitNum, setLimitNum] = useState(60);\r\n  const [dataObj, setDataObj] = useState({});\r\n  const [groups, setGroups] = useState(props?.data);\r\n  const { register, control, setValue } = useForm({\r\n    mode: 'onBlur',\r\n  });\r\n  const searchVal = useWatch({ control, name: 'search' });\r\n\r\n  useEffect(() => {\r\n    let offset = Date.now() - 1800000; // 30 minutes\r\n    let unsubscribe = onValue(\r\n      query(ref(database, 'groupAliases'), orderByChild('displayName')),\r\n      (snapshot) => {\r\n        if (snapshot.exists()) {\r\n          let obj = {};\r\n          snapshot.forEach((child) => {\r\n            if (child.val().isPublic === true) {\r\n              if (currentUser) {\r\n                get(\r\n                  child(ref(database), `groupLists/${child.key}/blacklist/${currentUser.uid}`)\r\n                ).then((dataSnapshot) => {\r\n                  if (!dataSnapshot.exists) {\r\n                    obj = {\r\n                      ...obj,\r\n                      [child.key]: child.val(),\r\n                    };\r\n                  }\r\n                });\r\n              } else {\r\n                obj = {\r\n                  ...obj,\r\n                  [child.key]: child.val(),\r\n                };\r\n              }\r\n            }\r\n          });\r\n          setDataObj(obj);\r\n        } else {\r\n          setDataObj('No Groups Available');\r\n          setGroups('No Groups Available');\r\n        }\r\n      }\r\n    );\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // 3 dropdown menu to filter searchVal description,\r\n  useEffect(() => {\r\n    const filterGroups = () => {\r\n      if (\r\n        dataObj &&\r\n        dataObj !== 'No Groups Available' &&\r\n        dataObj !== {} &&\r\n        dataObj !== props?.data\r\n      ) {\r\n        let obj = {};\r\n\r\n        Object.entries(dataObj).map((child) => {\r\n          if (Object.keys(obj).length < limitNum) {\r\n            if (searchVal) {\r\n              if (\r\n                child[1].description.includes(searchVal) ||\r\n                child[1].displayName.includes(searchVal)\r\n              ) {\r\n                obj = {\r\n                  ...obj,\r\n                  [child[0]]: { ...child[1] },\r\n                };\r\n              }\r\n            } else {\r\n              obj = {\r\n                ...obj,\r\n                [child[0]]: { ...child[1] },\r\n              };\r\n            }\r\n          }\r\n        });\r\n        setGroups(obj);\r\n      }\r\n    };\r\n\r\n    filterGroups();\r\n  }, [searchVal, dataObj]);\r\n\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Callouts Evolved | LFG</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Join groups focused on efficiently completing any video game activity.\"\r\n        />\r\n      </Head>\r\n      <h1>Groups</h1>\r\n      <div>\r\n        <div>\r\n          <h4>filter</h4>\r\n          <Input\r\n            autoComplete=\"off\"\r\n            label=\"Search\"\r\n            name=\"searchVal\"\r\n            placeholder=\"Filter Groups\"\r\n            title=\"Filter available groups based on description and name.\"\r\n            type=\"text\"\r\n            register={register('search')}\r\n            val={searchVal}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <h4>Groups</h4>\r\n\r\n          {groups === 'No Sessions Available' ? (\r\n            <div>\r\n              {searchVal\r\n                ? 'There are no groups available. Consider using less filters.'\r\n                : 'There are no groups available. Consider creating your own.'}\r\n            </div>\r\n          ) : (\r\n            Object.entries(groups).map(([key, data]) => {\r\n              return (\r\n                <Link href={`group/join/${key}`} key={key} passHref>\r\n                  <a className={`groupLink${groups === { preload } ? ' sr-only' : ''}`}>\r\n                    {data.groupPhotoURL && (\r\n                      <span className=\"groupImageWrapper\">\r\n                        <img\r\n                          src={data.groupPhotoURL}\r\n                          alt={data.displayName}\r\n                          height={192}\r\n                          width={144}\r\n                        />\r\n                      </span>\r\n                    )}\r\n                    <span>\r\n                      <small>{`(${data.lang.toUpperCase()}) ${data.displayName}`}</small>\r\n                      <p>{`${data.description}`}</p>\r\n                      <small>{`${data.users} Members`}</small>\r\n                    </span>\r\n                  </a>\r\n                </Link>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async () => {\r\n  try {\r\n    return {\r\n      props: {\r\n        data: { ...preload },\r\n      },\r\n    };\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    return {\r\n      props: { data: 'error' },\r\n    };\r\n  }\r\n};\r\n\r\nexport default Groups;\r\n","C:\\Dev\\calloutsevolved\\components\\ui\\select.jsx",[],[],{"ruleId":"319","severity":1,"message":"320","line":513,"column":6,"nodeType":"321","endLine":513,"endColumn":8,"suggestions":"322"},{"ruleId":"319","severity":1,"message":"323","line":540,"column":6,"nodeType":"321","endLine":540,"endColumn":18,"suggestions":"324"},{"ruleId":"319","severity":1,"message":"325","line":866,"column":6,"nodeType":"321","endLine":866,"endColumn":59,"suggestions":"326"},{"ruleId":"327","severity":1,"message":"328","line":1281,"column":25,"nodeType":"329","endLine":1281,"endColumn":100},{"ruleId":"319","severity":1,"message":"330","line":115,"column":6,"nodeType":"321","endLine":115,"endColumn":31,"suggestions":"331"},{"ruleId":"319","severity":1,"message":"330","line":115,"column":6,"nodeType":"321","endLine":115,"endColumn":31,"suggestions":"332"},{"ruleId":"319","severity":1,"message":"333","line":103,"column":6,"nodeType":"321","endLine":103,"endColumn":8,"suggestions":"334"},{"ruleId":"319","severity":1,"message":"325","line":141,"column":6,"nodeType":"321","endLine":141,"endColumn":26,"suggestions":"335"},{"ruleId":"327","severity":1,"message":"328","line":184,"column":25,"nodeType":"329","endLine":189,"endColumn":27},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activitys', 'currentUser', 'dataObj', 'games', 'languages', and 'platforms'. Either include them or remove the dependency array. You can also do a functional update 'setDataObj(d => ...)' if you only need 'dataObj' in the 'setDataObj' call.","ArrayExpression",["336"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["337"],"React Hook useEffect has missing dependencies: 'limitNum' and 'props?.data'. Either include them or remove the dependency array.",["338"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has a missing dependency: 'sessionData.ownerId'. Either include it or remove the dependency array.",["339"],["340"],"React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["341"],["342"],{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"349","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},"Update the dependencies array to be: [activitys, currentUser, dataObj, games, languages, platforms]",{"range":"356","text":"357"},"Update the dependencies array to be: [createGame, setValue]",{"range":"358","text":"359"},"Update the dependencies array to be: [activity, game, language, platform, search, dataObj, props?.data, limitNum]",{"range":"360","text":"361"},"Update the dependencies array to be: [currentUser, id, router, sessionData.ownerId]",{"range":"362","text":"363"},{"range":"364","text":"363"},"Update the dependencies array to be: [currentUser]",{"range":"365","text":"366"},"Update the dependencies array to be: [searchVal, dataObj, props?.data, limitNum]",{"range":"367","text":"368"},[20476,20478],"[activitys, currentUser, dataObj, games, languages, platforms]",[21275,21287],"[createGame, setValue]",[33055,33108],"[activity, game, language, platform, search, dataObj, props?.data, limitNum]",[4215,4240],"[currentUser, id, router, sessionData.ownerId]",[4213,4238],[2888,2890],"[currentUser]",[3853,3873],"[searchVal, dataObj, props?.data, limitNum]"]